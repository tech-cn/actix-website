"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[5052],{5052:(n,e,t)=>{t.r(e),t.d(e,{default:()=>a});const a='// <guard>\nuse actix_web::{\n    guard::{Guard, GuardContext},\n    http, HttpResponse,\n};\n\nstruct ContentTypeHeader;\n\nimpl Guard for ContentTypeHeader {\n    fn check(&self, req: &GuardContext) -> bool {\n        req.head()\n            .headers()\n            .contains_key(http::header::CONTENT_TYPE)\n    }\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{web, App, HttpServer};\n\n    HttpServer::new(|| {\n        App::new().route(\n            "/",\n            web::route().guard(ContentTypeHeader).to(HttpResponse::Ok),\n        )\n    })\n    .bind(("127.0.0.1", 8080))?\n    .run()\n    .await\n}\n// </guard>\n'}}]);