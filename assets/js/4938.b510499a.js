"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[4938],{4938:(n,e,t)=>{t.r(e),t.d(e,{default:()=>p});const p='pub mod auto;\npub mod chunked;\npub mod identity;\npub mod identity_two;\npub mod json_resp;\n\n// <builder>\nuse actix_web::{http::header::ContentType, HttpResponse};\n\nasync fn index() -> HttpResponse {\n    HttpResponse::Ok()\n        .content_type(ContentType::plaintext())\n        .insert_header(("X-Hdr", "sample"))\n        .body("data")\n}\n// </builder>\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{web, App, HttpServer};\n\n    HttpServer::new(|| App::new().route("/", web::get().to(index)))\n        .bind(("127.0.0.1", 8080))?\n        .run()\n        .await\n}\n'}}]);