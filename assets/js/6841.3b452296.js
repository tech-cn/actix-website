"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[6841],{179:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});const s='use actix_web::{HttpRequest, Responder};\n\n#[allow(dead_code)]\nasync fn index(_req: HttpRequest) -> impl Responder {\n    "Hello world!"\n}\n\n// <integration-one>\n#[cfg(test)]\nmod tests {\n    use actix_web::{http::header::ContentType, test, web, App};\n\n    use super::*;\n\n    #[actix_web::test]\n    async fn test_index_get() {\n        let app = test::init_service(App::new().route("/", web::get().to(index))).await;\n        let req = test::TestRequest::default()\n            .insert_header(ContentType::plaintext())\n            .to_request();\n        let resp = test::call_service(&app, req).await;\n        assert!(resp.status().is_success());\n    }\n\n    #[actix_web::test]\n    async fn test_index_post() {\n        let app = test::init_service(App::new().route("/", web::get().to(index))).await;\n        let req = test::TestRequest::post().uri("/").to_request();\n        let resp = test::call_service(&app, req).await;\n        assert!(resp.status().is_client_error());\n    }\n}\n// </integration-one>\n'}}]);