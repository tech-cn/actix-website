"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[7132],{7132:(n,e,t)=>{t.r(e),t.d(e,{default:()=>s});const s='// <signals>\nuse actix_web::{web, App, HttpResponse, HttpServer};\nuse std::io;\n\n#[tokio::main]\nasync fn main() -> io::Result<()> {\n    let srv = HttpServer::new(|| App::new().route("/", web::get().to(HttpResponse::Ok)))\n        .bind(("127.0.0.1", 8080))?\n        .shutdown_timeout(60) // <- Set shutdown timeout to 60 seconds\n        .run();\n\n    // obtain handle to server\n    let srv_handle = srv.handle();\n\n    // spawn server as Tokio task to start processing connections\n    tokio::spawn(srv);\n\n    // pause accepting new connections\n    srv_handle.pause().await;\n\n    // resume accepting new connections\n    srv_handle.resume().await;\n\n    // stop server gracefully\n    srv_handle.stop(true).await;\n\n    Ok(())\n}\n// </signals>\n\n#[allow(dead_code)]\nfn run_main() {\n    let _ = main();\n}\n'}}]);