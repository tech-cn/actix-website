"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[4031],{4031:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});const i='// <config-one>\nuse actix_files as fs;\nuse actix_web::http::header::{ContentDisposition, DispositionType};\nuse actix_web::{get, App, Error, HttpRequest, HttpServer};\n\n#[get("/{filename:.*}")]\nasync fn index(req: HttpRequest) -> Result<fs::NamedFile, Error> {\n    let path: std::path::PathBuf = req.match_info().query("filename").parse().unwrap();\n    let file = fs::NamedFile::open(path)?;\n    Ok(file\n        .use_last_modified(true)\n        .set_content_disposition(ContentDisposition {\n            disposition: DispositionType::Attachment,\n            parameters: vec![],\n        }))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| App::new().service(index))\n        .bind(("127.0.0.1", 8080))?\n        .run()\n        .await\n}\n// </config-one>\n'}}]);