"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[2809],{2809:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});const s='use std::io;\n\n// <chunked>\nuse actix_web::{get, web, App, Error, HttpRequest, HttpResponse, HttpServer};\nuse futures::future::ok;\nuse futures::stream::once;\n\n#[get("/")]\nasync fn index(_req: HttpRequest) -> HttpResponse {\n    HttpResponse::Ok().streaming(once(ok::<_, Error>(web::Bytes::from_static(b"data"))))\n}\n// </chunked>\n\n#[actix_web::main]\nasync fn main() -> io::Result<()> {\n    HttpServer::new(|| App::new().service(index))\n        .bind(("127.0.0.1", 8080))\n        .unwrap()\n        .run()\n        .await\n}\n'}}]);