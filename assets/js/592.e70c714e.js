"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[592],{592:(e,n,t)=>{t.r(n),t.d(n,{default:()=>p});const p="use actix_web::{\n    body::MessageBody,\n    dev::{ServiceFactory, ServiceRequest, ServiceResponse},\n    App, Error,\n};\n\n#[allow(dead_code)]\nfn app() -> App<\n    impl ServiceFactory<\n        ServiceRequest,\n        Response = ServiceResponse<impl MessageBody>,\n        Config = (),\n        InitError = (),\n        Error = Error,\n    >,\n> {\n    App::new()\n}\n\n// <keep-alive>\nuse actix_web::{http::KeepAlive, HttpServer};\nuse std::time::Duration;\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    // Set keep-alive to 75 seconds\n    let _one = HttpServer::new(app).keep_alive(Duration::from_secs(75));\n\n    // Use OS's keep-alive (usually quite long)\n    let _two = HttpServer::new(app).keep_alive(KeepAlive::Os);\n\n    // Disable keep-alive\n    let _three = HttpServer::new(app).keep_alive(None);\n\n    Ok(())\n}\n// </keep-alive>\n"}}]);