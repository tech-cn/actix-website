"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[870],{870:(n,e,t)=>{t.r(e),t.d(e,{default:()=>x});const x='// <identity-two>\nuse actix_web::{\n    get, http::header::ContentEncoding, middleware, App, HttpResponse, HttpServer,\n};\n\nstatic HELLO_WORLD: &[u8] = &[\n    0x1f, 0x8b, 0x08, 0x00, 0xa2, 0x30, 0x10, 0x5c, 0x00, 0x03, 0xcb, 0x48, 0xcd, 0xc9, 0xc9,\n    0x57, 0x28, 0xcf, 0x2f, 0xca, 0x49, 0xe1, 0x02, 0x00, 0x2d, 0x3b, 0x08, 0xaf, 0x0c, 0x00,\n    0x00, 0x00,\n];\n\n#[get("/")]\nasync fn index() -> HttpResponse {\n    HttpResponse::Ok()\n        .insert_header(ContentEncoding::Gzip)\n        .body(HELLO_WORLD)\n}\n// </identity-two>\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .wrap(middleware::Compress::default())\n            .service(index)\n    })\n    .bind(("127.0.0.1", 8080))?\n    .run()\n    .await\n}\n'}}]);