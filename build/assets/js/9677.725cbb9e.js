"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[9677],{9677:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});const i='// <either>\nuse actix_web::{Either, Error, HttpResponse};\n\ntype RegisterResult = Either<HttpResponse, Result<&\'static str, Error>>;\n\nasync fn index() -> RegisterResult {\n    if is_a_variant() {\n        // choose Left variant\n        Either::Left(HttpResponse::BadRequest().body("Bad data"))\n    } else {\n        // choose Right variant\n        Either::Right(Ok("Hello!"))\n    }\n}\n// </either>\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{web, App, HttpServer};\n\n    HttpServer::new(|| App::new().route("/", web::get().to(index)))\n        .bind(("127.0.0.1", 8080))?\n        .run()\n        .await\n}\n\nfn is_a_variant() -> bool {\n    true\n}\n'}}]);