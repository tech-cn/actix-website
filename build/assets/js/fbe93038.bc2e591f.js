(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[8432],{2412:(e,t,r)=>{var s={"./application/src/app.rs":[7995,7995],"./application/src/combine.rs":[7882,7882],"./application/src/config.rs":[8254,8254],"./application/src/main.rs":[6542,6542],"./application/src/mutable_state.rs":[8235,8235],"./application/src/scope.rs":[4395,4395],"./application/src/state.rs":[5971,5971],"./application/src/vh.rs":[4346,4346],"./async-handlers/src/main.rs":[6220,6220],"./async-handlers/src/stream.rs":[7944,7944],"./databases/src/main.rs":[7644,7644],"./easy-form-handling/src/main.rs":[8230,8230],"./either/src/main.rs":[9677,9677],"./errors/src/helpers.rs":[5786,5786],"./errors/src/logging.rs":[2524,2524],"./errors/src/main.rs":[2245,2245],"./errors/src/override_error.rs":[4547,4547],"./errors/src/recommend_one.rs":[7942,7942],"./errors/src/recommend_two.rs":[2244,2244],"./extractors/src/form.rs":[6733,6733],"./extractors/src/json_one.rs":[1533,1533],"./extractors/src/json_two.rs":[1522,1522],"./extractors/src/main.rs":[3108,3108],"./extractors/src/multiple.rs":[2591,2591],"./extractors/src/path_one.rs":[1341,1341],"./extractors/src/path_three.rs":[857,857],"./extractors/src/path_two.rs":[2544,2544],"./extractors/src/query.rs":[2790,2790],"./flexible-responders/src/main.rs":[7319,7319],"./getting-started/src/main.rs":[7370,7370],"./http2/src/main.rs":[4988,4988],"./main-example/src/main.rs":[1324,1324],"./middleware/src/default_headers.rs":[5693,5693],"./middleware/src/errorhandler.rs":[2856,2856],"./middleware/src/logger.rs":[340,340],"./middleware/src/main.rs":[2871,2871],"./middleware/src/user_sessions.rs":[1366,1366],"./middleware/src/wrap_fn.rs":[4398,4398],"./powerful-extractors/src/main.rs":[2509,2509],"./request-handlers/src/handlers_arc.rs":[2517,2517],"./request-handlers/src/main.rs":[3802,3802],"./request-routing/src/main.rs":[6461,6461],"./requests/src/main.rs":[6080,6080],"./requests/src/manual.rs":[9517,9517],"./requests/src/multipart.rs":[9327,9327],"./requests/src/streaming.rs":[7219,7219],"./requests/src/urlencoded.rs":[6982,6982],"./responder-trait/src/main.rs":[3514,3514],"./responses/src/auto.rs":[4147,4147],"./responses/src/chunked.rs":[2809,2809],"./responses/src/identity.rs":[3854,3854],"./responses/src/identity_two.rs":[870,870],"./responses/src/json_resp.rs":[1819,1819],"./responses/src/main.rs":[4938,4938],"./server/src/keep_alive.rs":[592,592],"./server/src/keep_alive_tp.rs":[8983,8983],"./server/src/main.rs":[8128,8128],"./server/src/signals.rs":[7132,7132],"./server/src/ssl.rs":[151,151],"./server/src/workers.rs":[4012,4012],"./static-files/src/configuration.rs":[4031,4031],"./static-files/src/configuration_two.rs":[8861,8861],"./static-files/src/directory.rs":[4333,4333],"./static-files/src/main.rs":[7135,7135],"./testing/src/integration_one.rs":[179,6841],"./testing/src/integration_two.rs":[6720,6720],"./testing/src/main.rs":[4198,4198],"./testing/src/stream_response.rs":[926,926],"./url-dispatch/src/cfg.rs":[3146,3146],"./url-dispatch/src/dhandler.rs":[6692,6692],"./url-dispatch/src/guard.rs":[5052,5052],"./url-dispatch/src/guard2.rs":[8207,8207],"./url-dispatch/src/main.rs":[710,710],"./url-dispatch/src/minfo.rs":[813,813],"./url-dispatch/src/norm.rs":[966,966],"./url-dispatch/src/norm2.rs":[5315,5315],"./url-dispatch/src/path.rs":[3403,3403],"./url-dispatch/src/path2.rs":[9765,9765],"./url-dispatch/src/pbuf.rs":[3173,3173],"./url-dispatch/src/resource.rs":[960,960],"./url-dispatch/src/scope.rs":[8536,8536],"./url-dispatch/src/url_ext.rs":[2312,2312],"./url-dispatch/src/urls.rs":[4808,4808],"./websockets/src/main.rs":[1256,1256]};function n(e){if(!r.o(s,e))return Promise.resolve().then((()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],n=t[0];return r.e(t[1]).then((()=>r(n)))}n.keys=()=>Object.keys(s),n.id=2412,e.exports=n},3905:(e,t,r)=>{"use strict";r.d(t,{Zo:()=>p,kt:()=>m});var s=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,s,n=function(e,t){if(null==e)return{};var r,s,n={},a=Object.keys(e);for(s=0;s<a.length;s++)r=a[s],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)r=a[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=s.createContext({}),l=function(e){var t=s.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return s.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return r?s.createElement(h,i(i({ref:t},p),{},{components:r})):s.createElement(h,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var l=2;l<a;l++)i[l]=r[l];return s.createElement.apply(null,i)}return s.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2536:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});var s=r(7294),n=r(814);const a=e=>{let{example:t,file:a,section:i}=e;const[o,c]=(0,s.useState)("");return(0,s.useEffect)((()=>{let e=!0;return r(2412)(`./${t}/src/${a||"main.rs"}`).then((t=>{t=t.default.match(new RegExp(`// <${i}>\n([\\s\\S]*)// </${i}>`))[1],e&&c(t)})).catch((e=>console.log(e))),()=>{e=!1}}),[]),s.createElement(n.Z,{className:"language-rust"},o)}},4534:(e,t,r)=>{"use strict";r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var s=r(7462),n=(r(7294),r(3905)),a=r(2536);const i={title:"Testing"},o="Testing",c={unversionedId:"testing",id:"testing",title:"Testing",description:"Every application should be well tested. Actix Web provides tools to perform unit and integration tests.",source:"@site/docs/testing.md",sourceDirName:".",slug:"/testing",permalink:"/docs/testing",draft:!1,editUrl:"https://github.com/actix/actix-website/edit/master/docs/testing.md",tags:[],version:"current",frontMatter:{title:"Testing"},sidebar:"docs",previous:{title:"Responses",permalink:"/docs/response"},next:{title:"Middleware",permalink:"/docs/middleware"}},l={},p=[{value:"Unit Tests",id:"unit-tests",level:2},{value:"Integration tests",id:"integration-tests",level:2},{value:"Stream response tests",id:"stream-response-tests",level:2}],u={toc:p};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,s.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"testing"},"Testing"),(0,n.kt)("p",null,"Every application should be well tested. Actix Web provides tools to perform unit and integration tests."),(0,n.kt)("h2",{id:"unit-tests"},"Unit Tests"),(0,n.kt)("p",null,"For unit testing, actix-web provides a request builder type. ",(0,n.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/4/actix_web/test/struct.TestRequest.html"},(0,n.kt)("em",{parentName:"a"},"TestRequest"))," implements a builder-like pattern. You can generate a ",(0,n.kt)("inlineCode",{parentName:"p"},"HttpRequest")," instance with ",(0,n.kt)("inlineCode",{parentName:"p"},"to_http_request()")," and call your handler with it."),(0,n.kt)(a.Z,{example:"testing",file:"main.rs",section:"unit-tests",mdxType:"CodeBlock"}),(0,n.kt)("h2",{id:"integration-tests"},"Integration tests"),(0,n.kt)("p",null,"There are a few methods for testing your application. Actix Web can be used to run the application with specific handlers in a real HTTP server."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"TestRequest::get()"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"TestRequest::post()")," and other methods can be used to send requests to the test server."),(0,n.kt)("p",null,"To create a ",(0,n.kt)("inlineCode",{parentName:"p"},"Service")," for testing, use the ",(0,n.kt)("inlineCode",{parentName:"p"},"test::init_service")," method which accepts a regular ",(0,n.kt)("inlineCode",{parentName:"p"},"App")," builder."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Check the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/4/actix_web/test/index.html"},"API documentation")," for more information.")),(0,n.kt)(a.Z,{example:"testing",file:"integration_one.rs",section:"integration-one",mdxType:"CodeBlock"}),(0,n.kt)("p",null,"If you need more complex application configuration, testing should be very similar to creating the normal application. For example, you may need to initialize application state. Create an ",(0,n.kt)("inlineCode",{parentName:"p"},"App")," with a ",(0,n.kt)("inlineCode",{parentName:"p"},"data")," method and attach state just like you would from a normal application."),(0,n.kt)(a.Z,{example:"testing",file:"integration_two.rs",section:"integration-two",mdxType:"CodeBlock"}),(0,n.kt)("h2",{id:"stream-response-tests"},"Stream response tests"),(0,n.kt)("p",null,"If you need to test stream generation, it would be enough to call ",(0,n.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/4/actix_web/struct.HttpResponse.html#method.into_parts"},(0,n.kt)("inlineCode",{parentName:"a"},"into_parts()"))," and convert the resulting body into a future and execute it, for example when testing ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events"},(0,n.kt)("em",{parentName:"a"},"Server Sent Events")),"."),(0,n.kt)(a.Z,{example:"testing",file:"stream_response.rs",section:"stream-response",mdxType:"CodeBlock"}))}d.isMDXComponent=!0}}]);