"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[3514],{3514:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});const s='// <responder-trait>\nuse actix_web::{\n    body::BoxBody, http::header::ContentType, HttpRequest, HttpResponse, Responder,\n};\nuse serde::Serialize;\n\n#[derive(Serialize)]\nstruct MyObj {\n    name: &\'static str,\n}\n\n// Responder\nimpl Responder for MyObj {\n    type Body = BoxBody;\n\n    fn respond_to(self, _req: &HttpRequest) -> HttpResponse<Self::Body> {\n        let body = serde_json::to_string(&self).unwrap();\n\n        // Create response and set content type\n        HttpResponse::Ok()\n            .content_type(ContentType::json())\n            .body(body)\n    }\n}\n\nasync fn index() -> impl Responder {\n    MyObj { name: "user" }\n}\n// </responder-trait>\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{web, App, HttpServer};\n\n    HttpServer::new(|| App::new().route("/", web::get().to(index)))\n        .bind(("127.0.0.1", 8080))?\n        .run()\n        .await\n}\n'}}]);