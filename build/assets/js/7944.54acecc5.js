"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[7944],{7944:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});const s='// <stream>\nuse actix_web::{get, web, App, Error, HttpResponse, HttpServer};\nuse futures::{future::ok, stream::once};\n\n#[get("/stream")]\nasync fn stream() -> HttpResponse {\n    let body = once(ok::<_, Error>(web::Bytes::from_static(b"test")));\n\n    HttpResponse::Ok()\n        .content_type("application/json")\n        .streaming(body)\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| App::new().service(stream))\n        .bind(("127.0.0.1", 8080))?\n        .run()\n        .await\n}\n// </stream>\n'}}]);