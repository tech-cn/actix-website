"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[2790],{2790:(e,n,s)=>{s.r(n),s.d(n,{default:()=>i});const i='// <query>\nuse actix_web::{get, web, App, HttpServer};\nuse serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct Info {\n    username: String,\n}\n\n// this handler gets called if the query deserializes into `Info` successfully\n// otherwise a 400 Bad Request error response is returned\n#[get("/")]\nasync fn index(info: web::Query<Info>) -> String {\n    format!("Welcome {}!", info.username)\n}\n// </query>\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| App::new().service(index))\n        .bind(("127.0.0.1", 8080))?\n        .run()\n        .await\n}\n'}}]);